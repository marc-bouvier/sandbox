# Daily log - Eisenhower matrix in elixir

## Bootstrapping project

Pheonix project without Ecto. I am not sure I need SQL for now.

```
mix phx.new --no-ecto eisenhower_matrix
* creating eisenhower_matrix/config/config.exs
* creating eisenhower_matrix/config/dev.exs
* creating eisenhower_matrix/config/prod.exs
* creating eisenhower_matrix/config/prod.secret.exs
* creating eisenhower_matrix/config/test.exs
* creating eisenhower_matrix/lib/eisenhower_matrix/application.ex
* creating eisenhower_matrix/lib/eisenhower_matrix.ex
* creating eisenhower_matrix/lib/eisenhower_matrix_web/channels/user_socket.ex
* creating eisenhower_matrix/lib/eisenhower_matrix_web/views/error_helpers.ex
* creating eisenhower_matrix/lib/eisenhower_matrix_web/views/error_view.ex
* creating eisenhower_matrix/lib/eisenhower_matrix_web/endpoint.ex
* creating eisenhower_matrix/lib/eisenhower_matrix_web/router.ex
* creating eisenhower_matrix/lib/eisenhower_matrix_web.ex
* creating eisenhower_matrix/mix.exs
* creating eisenhower_matrix/README.md
* creating eisenhower_matrix/test/support/channel_case.ex
* creating eisenhower_matrix/test/support/conn_case.ex
* creating eisenhower_matrix/test/test_helper.exs
* creating eisenhower_matrix/test/eisenhower_matrix_web/views/error_view_test.exs
* creating eisenhower_matrix/lib/eisenhower_matrix_web/gettext.ex
* creating eisenhower_matrix/priv/gettext/en/LC_MESSAGES/errors.po
* creating eisenhower_matrix/priv/gettext/errors.pot
* creating eisenhower_matrix/lib/eisenhower_matrix_web/controllers/page_controller.ex
* creating eisenhower_matrix/lib/eisenhower_matrix_web/templates/layout/app.html.eex
* creating eisenhower_matrix/lib/eisenhower_matrix_web/templates/page/index.html.eex
* creating eisenhower_matrix/lib/eisenhower_matrix_web/views/layout_view.ex
* creating eisenhower_matrix/lib/eisenhower_matrix_web/views/page_view.ex
* creating eisenhower_matrix/test/eisenhower_matrix_web/controllers/page_controller_test.exs
* creating eisenhower_matrix/test/eisenhower_matrix_web/views/layout_view_test.exs
* creating eisenhower_matrix/test/eisenhower_matrix_web/views/page_view_test.exs
* creating eisenhower_matrix/.gitignore
* creating eisenhower_matrix/assets/brunch-config.js
* creating eisenhower_matrix/assets/css/app.css
* creating eisenhower_matrix/assets/css/phoenix.css
* creating eisenhower_matrix/assets/js/app.js
* creating eisenhower_matrix/assets/js/socket.js
* creating eisenhower_matrix/assets/package.json
* creating eisenhower_matrix/assets/static/robots.txt
* creating eisenhower_matrix/assets/static/images/phoenix.png
* creating eisenhower_matrix/assets/static/favicon.ico

Fetch and install dependencies? [Yn] y
* running mix deps.get
* running mix deps.compile
* running cd assets && npm install && node node_modules/brunch/bin/brunch build

We are all set! Go into your application by running:

    $ cd eisenhower_matrix

Start your Phoenix app with:

    $ mix phx.server

You can also run your app inside IEx (Interactive Elixir) as:

    $ iex -S mix phx.server
```

## Update brunch

With my bootstrap, Github has detected a potential vulnerability from `node-growl` dependency.
The vulnerability comes from `loggy` pulled from `brunch.io`.
I had to upgrade `brunch`.

```
cd assets
```
Installed ncu
```
~/s/e/assets ❯❯❯ npm i -g npm-check-updates                                                              ✘ 127 master ◼
/home/marco/.npm-global/bin/npm-check-updates -> /home/marco/.npm-global/lib/node_modules/npm-check-updates/bin/npm-check-updates
/home/marco/.npm-global/bin/ncu -> /home/marco/.npm-global/lib/node_modules/npm-check-updates/bin/ncu
+ npm-check-updates@2.14.2
added 383 packages in 15.239s
```
Performed npm dependencies upgrades with ncu.
```
~/s/e/assets ❯❯❯ ncu -u
Using /home/marco/sources/eisenhower_matrix/assets/package.json
[..................] \ :
 babel-brunch   6.1.1  →    7.0.0 
 brunch        2.10.9  →  2.10.17 
Upgraded /home/marco/sources/eisenhower_matrix/assets/package.json
```
Installed npm dependencies.
```
~/s/e/assets ❯❯❯ npm install                                                                                 master ✱ ◼
npm WARN assets No description
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.4 (node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})

added 125 packages, removed 106 packages, updated 30 packages and moved 10 packages in 17.284s

```

This fixed the issue mentionned in [this forum question](https://elixirforum.com/t/github-found-a-potential-security-vulnerability-from-node-growl/15213).

## Run phoenix app for the first time


```
~/s/eisenhower_matrix ❯❯❯ mix phx.server                                                                                                       master ✱ ◼
Compiling 12 files (.ex)
Generated eisenhower_matrix app
[info] Running EisenhowerMatrixWeb.Endpoint with Cowboy using http://0.0.0.0:4000
19:54:32 - info: compiled 6 files into 2 files, copied 3 in 1.3 sec
```

I was able to run the app in my browser : [http://localhost:4000](http://localhost:4000)

## ADR : Architecture decisions records

[Install `adr-tools`](https://github.com/npryce/adr-tools/blob/master/INSTALL.md).

Linux : Downloaded from git repo () and added src to PATH.

```
cd
cd bin 
git clone https://github.com/npryce/adr-tools.git 
```

Then added `export PATH=$PATH:~/bin/adr-tools/src` to `.bashrc` or `.zshrc`.

I got back to the project directory and typed the following:
```
adr init docs/architecture/decisions
```

This created the initial pre-filled  ADR `docs/architecture/decisions/0001-record-architecture-decisions.md `.

```
# 1. Record architecture decisions

Date: 2018-09-17

## Status

Accepted

## Context

We need to record the architectural decisions made on this project.

## Decision

We will use Architecture Decision Records, as [described by Michael Nygard](http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions).

## Consequences

See Michael Nygard's article, linked above. For a lightweight ADR toolset, see Nat Pryce's [adr-tools](https://github.com/npryce/adr-tools).
```

Then I added a new adr : 
```
$> adr new Use Elixir as backend technology
docs/architecture/decisions/0002-use-elixir-as-backend-technology.md 
```
My default text editor opened the generated file and I was able to edit it.
	
Then I added a new adr :
```
$> adr new Use Elixir as backend technology
docs/architecture/decisions/0002-use-elixir-as-backend-technology.md
```
My default text editor opened the generated file and I was able to edit it. 

## 

